-- SERVICES
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local vim = game:GetService("VirtualInputManager")

-- Memuat Orion Library
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

-- Remote Event untuk Parry
local ParryEvent = ReplicatedStorage:WaitForChild("ParryEvent")

-- Variabel untuk data
local data = {
    target_Count = 0,
    taken_time = 1,
    hit_Count = 0,
    is_ball_Warping = false,
    is_Spamming = false,
    canParry = true,
    last_target = nil,
    is_parrying = false,
    last_parry_time = 0,
    parry_count = 0,
    distance_player_to_ball = 0,
    ping = players.LocalPlayer:GetNetworkPing(), -- Ping saat ini
}

local local_player = players.LocalPlayer

-- GUI Setup
local window = OrionLib:MakeWindow({
    Name = "Auto Parry",
    HidePremium = false,
    IntroText = "Welcome to Auto Parry!",
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

local tab = window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Toggle untuk Auto Parry
tab:AddToggle({
    Name = "Enable Auto Parry",
    Default = false,
    Callback = function(value)
        data.autoParryEnabled = value
    end
})

-- Mendapatkan bola
local function getBall()
    return training_mode and getTrainingBall() or Nurysium_Util.getBall()
end

-- Fungsi untuk mendeteksi ping
local function updatePing()
    data.ping = players.LocalPlayer:GetNetworkPing()
end

-- Fungsi untuk menangani parry
local function handleParry()
    local ball = getBall()
    updatePing() -- Update ping setiap kali parry ditangani

    if not ball then
        -- Reset data jika bola tidak ada
        data.target_Count = 0
        data.taken_time = 1
        data.hit_Count = 0
        data.is_ball_Warping = false
        data.is_Spamming = false
        data.canParry = true
        data.last_target = nil
        return
    end

    -- Deteksi target dan update
    ball:GetAttributeChangedSignal('target'):Once(function()
        data.canParry = true
    end)

    if ball:GetAttribute('target') == local_player.Name then
        data.target_Count = data.target_Count + 1
    end

    task.delay(0.2, function()
        data.target_Count = data.target_Count - 1
    end)

    -- Penghitungan posisi dan kecepatan bola
    local ball_Position = ball.Position
    local player_Position = local_player.Character.PrimaryPart.Position
    data.distance_player_to_ball = (player_Position - ball_Position).Magnitude

    -- Logika Prediksi untuk pergerakan bola
    local ball_Velocity = ball.AssemblyLinearVelocity
    local predictionTime = 0.25 + (data.ping / 100) -- Prediksi waktu berdasarkan ping
    local ball_PredictedPosition = ball_Position + (ball_Velocity * predictionTime)

    -- Logika Parry
    if data.autoParryEnabled and (data.is_parrying == false and data.canParry) then
        if data.distance_player_to_ball <= 10 and (tick() - data.last_parry_time) >= 0.5 then
            ParryEvent:FireServer() -- Mengirim event ke server
            data.is_parrying = true
            data.last_parry_time = tick()
            data.parry_count = data.parry_count + 1

            -- Notifikasi parry menggunakan Orion
            OrionLib:MakeNotification({
                Name = "Parry Executed",
                Content = "Successfully executed parry!",
                Image = nil,
                Time = 3
            })

            -- Reset status parry setelah beberapa detik
            task.delay(0.1, function()
                data.is_parrying = false
            end)
        end
    end

    -- Spam Parry Logic
    if data.distance_player_to_ball < 15 then
        data.is_Spamming = true
    else
        data.is_Spamming = false
    end

    -- Penanganan Warp
    if data.distance_player_to_ball < 10 and data.target_Count > 0 then
        data.is_ball_Warping = tick() - (data.last_target and (ball_Position - data.last_target.HumanoidRootPart.Position).Magnitude < 35.5 and tick() or 0) > 0.15
    end
end

-- Menggunakan RunService untuk memanggil handleParry setiap frame
runService.RenderStepped:Connect(handleParry)

-- Menyimpan konfigurasi GUI saat ditutup
OrionLib:Init()
