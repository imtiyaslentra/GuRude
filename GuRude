local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Membuat window utama
local Window = OrionLib:MakeWindow({
    Name = "Blade Ball",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest",
})

-- Memanggil Init pada objek Window
if Window and type(Window.Init) == "function" then
    Window:Init()
else
    warn("Window Init function is missing!")
end

-- Notifikasi ketika GUI di-load
OrionLib:MakeNotification({
    Name = "Execution Started",
    Content = "GUI successfully loaded!",
    Image = nil,
    Time = 5
})

-- Tab utama
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483362458",
    PremiumOnly = false
})

-- SERVICES
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local vim = game:GetService("VirtualInputManager")

local ballFolder = workspace.Balls
local indicatorPart = Instance.new("Part")
indicatorPart.Size = Vector3.new(5, 5, 5)
indicatorPart.Anchored = true
indicatorPart.CanCollide = false
indicatorPart.Transparency = 1
indicatorPart.BrickColor = BrickColor.new("Bright red")
indicatorPart.Parent = workspace

local lastBallPressed = nil
local isKeyPressed = false
local autoParryActive = false -- Status untuk toggle Auto Parry
local autoSpamActive = false -- Status untuk toggle Auto Spam

-- Fungsi untuk menghitung waktu prediksi hingga tabrakan dengan mempertimbangkan curve
local function calculateCurvePrediction(ball, player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = player.Character.HumanoidRootPart
        local relativePosition = ball.Position - rootPart.Position
        local velocity = ball.Velocity + rootPart.Velocity

        -- Menghitung prediksi dengan mempertimbangkan curve
        local curveFactor = 0.1 -- Sesuaikan faktor ini untuk dampak curve
        local predictedPosition = ball.Position + velocity * (1 + curveFactor)

        local a = (ball.Size.magnitude / 2) 
        local b = (predictedPosition - rootPart.Position).magnitude
        local c = math.sqrt(a * a + b * b)
        local timeToCollision = (c - a) / velocity.magnitude

        return timeToCollision
    end
    return math.huge
end

-- Fungsi untuk menghitung jarak antara pemain dan bola
local function calculateDistance(ball, player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        return (ball.Position - player.Character.HumanoidRootPart.Position).magnitude
    end
    return math.huge
end

-- Fungsi untuk memperbarui posisi indikator
local function updateIndicatorPosition(ball)
    indicatorPart.Position = ball.Position
end

-- Fungsi untuk memeriksa kedekatan bola dengan pemain
local function checkProximityToPlayer(ball, player)
    if not autoParryActive then return end -- Hentikan fungsi jika Auto Parry tidak aktif

    local predictionTime = calculateCurvePrediction(ball, player)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")
    
    local distanceToBall = calculateDistance(ball, player)
    
    -- Mengatur threshold untuk jarak yang lebih dinamis
    local dynamicDistanceThreshold = distanceToBall < 10 and 5 or distanceToBall * 0.5

    if distanceToBall < 10 and predictionTime <= dynamicDistanceThreshold and realBallAttribute == true and target == player.Name and not isKeyPressed then
        -- Melakukan parry
        vim:SendKeyEvent(true, Enum.KeyCode.F, false, nil)
        wait(0.005)
        vim:SendKeyEvent(false, Enum.KeyCode.F, false, nil)
        lastBallPressed = ball
        isKeyPressed = true
        OrionLib:MakeNotification({
            Name = "Parry Executed",
            Content = "Successfully executed parry!",
            Image = nil,
            Time = 3
        })
    elseif lastBallPressed == ball and (predictionTime > dynamicDistanceThreshold or realBallAttribute ~= true or target ~= player.Name or distanceToBall >= 10) then
        -- Reset isKeyPressed jika tidak memenuhi kondisi
        isKeyPressed = false
    end
end

-- Fungsi untuk memeriksa kedekatan bola
local function checkBallsProximity()
    local player = players.LocalPlayer
    if player then
        for _, ball in pairs(ballFolder:GetChildren()) do
            checkProximityToPlayer(ball, player)
            updateIndicatorPosition(ball)
        end
    end
end

-- Fungsi toggle untuk Auto Parry
local function ToggleAutoParry()
    autoParryActive = not autoParryActive
    if autoParryActive then
        OrionLib:MakeNotification({
            Name = "Auto Parry Activated",
            Content = "Auto Parry is now active!",
            Image = nil,
            Time = 3
        })
    else
        OrionLib:MakeNotification({
            Name = "Auto Parry Deactivated",
            Content = "Auto Parry has been turned off.",
            Image = nil,
            Time = 3
        })
    end
end

-- Tombol Toggle Auto Parry pada tab
Tab:AddButton({
    Name = "Toggle Auto Parry",
    Callback = function()
        ToggleAutoParry()
    end
})

-- Fungsi untuk melakukan Auto Spam
local function AutoSpam()
    if not autoSpamActive then return end
    -- Menggunakan skill spam dengan delay
    while autoSpamActive do
        vim:SendKeyEvent(true, Enum.KeyCode.Z, false, nil) -- Ganti dengan tombol yang sesuai
        wait(0.1) -- Sesuaikan delay spam
        vim:SendKeyEvent(false, Enum.KeyCode.Z, false, nil)
        wait(0.1)
    end
end

-- Fungsi toggle untuk Auto Spam
local function ToggleAutoSpam()
    autoSpamActive = not autoSpamActive
    if autoSpamActive then
        OrionLib:MakeNotification({
            Name = "Auto Spam Activated",
            Content = "Auto Spam is now active!",
            Image = nil,
            Time = 3
        })
        AutoSpam() -- Memulai fungsi Auto Spam
    else
        OrionLib:MakeNotification({
            Name = "Auto Spam Deactivated",
            Content = "Auto Spam has been turned off.",
            Image = nil,
            Time = 3
        })
    end
end

-- Tombol Toggle Auto Spam pada tab
Tab:AddButton({
    Name = "Toggle Auto Spam",
    Callback = function()
        ToggleAutoSpam()
    end
})

-- Memperbarui fungsi checkBallsProximity untuk memantau pemain yang dekat
local function checkNearbyPlayers(player)
    for _, otherPlayer in pairs(players:GetPlayers()) do
        if otherPlayer ~= player and (otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart")) then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < 15 then
                -- Jika ada pemain dekat yang menargetkan kita, siap untuk Auto Spam
                autoSpamActive = true
            end
        end
    end
end

-- Menjalankan fungsi checkBallsProximity di Heartbeat
runService.Heartbeat:Connect(function()
    checkBallsProximity()
    local player = players.LocalPlayer
    if player then
        checkNearbyPlayers(player) -- Cek pemain dekat
    end
end)

print("Script ran without errors")
