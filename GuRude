local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Membuat window utama
local Window = OrionLib:MakeWindow({
    Name = "Blade Ball",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest",
})

-- Memanggil Init pada objek Window
if Window and type(Window.Init) == "function" then
    Window:Init()
else
    warn("Window Init function is missing!")
end

-- Notifikasi ketika GUI di-load
OrionLib:MakeNotification({
    Name = "Execution Started",
    Content = "GUI successfully loaded!",
    Image = nil,
    Time = 5
})

-- Tab utama
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483362458",
    PremiumOnly = false
})

-- SERVICES
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local vim = game:GetService("VirtualInputManager")

local ballFolder = workspace.Balls
local indicatorPart = Instance.new("Part")
indicatorPart.Size = Vector3.new(5, 5, 5)
indicatorPart.Anchored = true
indicatorPart.CanCollide = false
indicatorPart.Transparency = 1
indicatorPart.BrickColor = BrickColor.new("Bright red")
indicatorPart.Parent = workspace

local lastBallPressed = nil
local isKeyPressed = false
local autoParryActive = false -- Status untuk toggle Auto Parry
local autoSpamActive = false -- Status untuk toggle Auto Spam
local spamDelay = 0.1 -- Delay antara spam, sesuaikan sesuai kebutuhan

-- Fungsi untuk mendapatkan ping pemain
local function getPlayerPing(player)
    local success, ping = pcall(function()
        return player:GetNetworkPing()
    end)
    return success and ping or 0
end

-- Fungsi untuk menghitung rata-rata ping yang stabil
local function calculateAdjustedPing()
    local totalPing = 0
    local numSamples = 5 -- Mengambil beberapa sampel untuk mendapatkan rata-rata
    for i = 1, numSamples do
        totalPing = totalPing + getPlayerPing(players.LocalPlayer)
        wait(0.1) -- Delay sedikit antara pengukuran
    end
    return totalPing / numSamples -- Mengembalikan rata-rata ping
end

-- Fungsi untuk menghitung waktu prediksi hingga tabrakan dengan memperhitungkan ping
local function calculatePredictionTime(ball, player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = player.Character.HumanoidRootPart
        local relativePosition = ball.Position - rootPart.Position
        local velocity = ball.Velocity + rootPart.Velocity 

        -- Hitung waktu tabrakan
        local a = (ball.Size.magnitude / 2) 
        local b = relativePosition.magnitude
        local c = math.sqrt(a * a + b * b)
        
        local timeToCollision = (c - a) / velocity.magnitude

        -- Sesuaikan dengan ping
        local pingAdjustment = getPlayerPing(players.LocalPlayer) / 1000 -- Konversi ke detik
        timeToCollision = timeToCollision + pingAdjustment

        return timeToCollision
    end
    return math.huge
end

-- Fungsi untuk memperbarui posisi indikator
local function updateIndicatorPosition(ball)
    indicatorPart.Position = ball.Position
end

-- Fungsi untuk memeriksa kedekatan bola dengan pemain
local function checkProximityToPlayer(ball, player)
    if not autoParryActive then return end

    local predictionTime = calculatePredictionTime(ball, player)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")
    
    -- Menambahkan penghitungan jarak bola ke pemain
    local distanceToPlayer = (ball.Position - player.Character.HumanoidRootPart.Position).magnitude
    local pingAdjustment = calculateAdjustedPing() / 1000 -- Menggunakan rata-rata ping yang lebih stabil
    local adjustedPredictionTime = predictionTime + pingAdjustment

    -- Menggunakan threshold jarak untuk menyesuaikan tindakan
    local distanceThreshold = 10 -- Threshold jarak dalam unit permainan
    local ballSpeedThreshold = math.max(0.31, 0.5 - ball.Velocity.magnitude * 0.01)

    -- Memperbaiki logika prediksi
    if adjustedPredictionTime <= ballSpeedThreshold + 0.1 and 
       realBallAttribute == true and target == player.Name and 
       not isKeyPressed and distanceToPlayer < distanceThreshold then
        vim:SendKeyEvent(true, Enum.KeyCode.F, false, nil)
        wait(0.005)
        vim:SendKeyEvent(false, Enum.KeyCode.F, false, nil)
        lastBallPressed = ball
        isKeyPressed = true
        OrionLib:MakeNotification({
            Name = "Parry Executed",
            Content = "Successfully executed parry!",
            Image = nil,
            Time = 3
        })
    elseif lastBallPressed == ball and 
           (adjustedPredictionTime > ballSpeedThreshold or 
           realBallAttribute ~= true or target ~= player.Name) then
        isKeyPressed = false
    end
end

-- Fungsi untuk melakukan Auto Spam
local function performAutoSpam()
    if not autoSpamActive then return end

    while autoSpamActive do
        vim:SendKeyEvent(true, Enum.KeyCode.Mouse1, false, nil) -- Mengirimkan klik mouse
        wait(spamDelay) -- Delay sesuai dengan spamDelay
        vim:SendKeyEvent(false, Enum.KeyCode.Mouse1, false, nil)
    end
end

-- Tambahan variabel untuk mengatur keadaan Auto Parry dan Auto Spam berdasarkan kecepatan bola
local playerFacing = false -- Menandakan apakah pemain menghadap pemain lawan
local opponentPlayer = nil -- Menyimpan informasi tentang pemain lawan

-- Memperbarui fungsi untuk mengecek jarak antara bola dan pemain
local function checkBallsProximity()
    local player = players.LocalPlayer
    if player then
        for _, ball in pairs(ballFolder:GetChildren()) do
            checkProximityToPlayer(ball, player)
            updateIndicatorPosition(ball)

            local ballSpeed = ball.Velocity.magnitude
            local playersInProximity = 0
            
            for _, otherPlayer in pairs(players:GetPlayers()) do
                if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (player.Character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).magnitude
                    if distance < 15 then
                        playersInProximity = playersInProximity + 1
                    end
                end
            end
            
            -- Logika untuk mengatur Auto Parry dan Auto Spam
            if playersInProximity == 1 then
                if ballSpeed > 0.5 and not autoSpamActive then
                    ToggleAutoSpam() 
                elseif ballSpeed <= 0.5 and autoSpamActive then
                    ToggleAutoSpam() 
                end
            else
                if autoSpamActive then
                    ToggleAutoSpam()
                end
            end
        end
    end
end

runService.Heartbeat:Connect(checkBallsProximity)

-- Fungsi toggle untuk Auto Parry
local function ToggleAutoParry()
    autoParryActive = not autoParryActive
    if autoParryActive then
        OrionLib:MakeNotification({
            Name = "Auto Parry Activated",
            Content = "Auto Parry is now active!",
            Image = nil,
            Time = 3
        })
    else
        OrionLib:MakeNotification({
            Name = "Auto Parry Deactivated",
            Content = "Auto Parry has been turned off.",
            Image = nil,
            Time = 3
        })
    end
end

-- Fungsi toggle untuk Auto Spam
local function ToggleAutoSpam()
    autoSpamActive = not autoSpamActive
    if autoSpamActive then
        OrionLib:MakeNotification({
            Name = "Auto Spam Activated",
            Content = "Auto Spam is now active!",
            Image = nil,
            Time = 3
        })
        performAutoSpam() -- Mulai melakukan spam
    else
        OrionLib:MakeNotification({
            Name = "Auto Spam Deactivated",
            Content = "Auto Spam has been turned off.",
            Image = nil,
            Time = 3
        })
    end
end

-- Tombol Toggle Auto Parry pada tab
Tab:AddButton({
        Name = "Toggle Auto Parry",
    Callback = function()
        ToggleAutoParry()
    end
})

-- Tombol Toggle Auto Spam pada tab
Tab:AddButton({
    Name = "Toggle Auto Spam",
    Callback = function()
        ToggleAutoSpam()
    end
})

-- Menambahkan slider untuk mengatur spam delay
Tab:AddSlider({
    Name = "Spam Delay",
    Min = 0.01,
    Max = 1,
    Default = spamDelay,
    Increment = 0.01,
    Callback = function(value)
        spamDelay = value
    end
})

-- Mengatur UI
OrionLib:Init()
   
